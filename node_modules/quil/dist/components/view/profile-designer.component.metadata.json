[{"__symbolic":"module","version":3,"metadata":{"ProfileDesignerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"profile-designer","template":"\n    <div class=\"ui-g\">\n      <div class=\"card ui-g-12\" style=\"margin:7px 10px\">\n        <div class=\"ui-g-3\">\n          <div class=\"ui-g-12\">\n            <button pButton type=\"button\" icon=\"ui-icon-person-add\" [disabled]=\"initNewProfile\" (click)=\"createProfile()\"></button>\n            <button pButton type=\"button\" icon=\"ui-icon-close\" [disabled]=\"!profileIsSelected\" (click)=\"deleteProfile()\" pTooltip=\"Delete profile\"></button>\n            <button pButton type=\"button\" icon=\"ui-icon-check\" [disabled]=\"!profileIsSelected\" (click)=\"saveProfile()\" pTooltip=\"Save profile\"></button>\n\n            <button pButton type=\"button\" icon=\"ui-icon-content-cut\" [disabled]=\"profileIsSelected\" pTooltip=\"Cut\" (click)=\"cut()\"></button>\n            <button pButton type=\"button\" icon=\"ui-icon-content-copy\" [disabled]=\"profileIsSelected\" pTooltip=\"Copy\" (click)=\"copy()\"></button>\n            <button pButton type=\"button\" icon=\"ui-icon-content-paste\" [disabled]=\"!copyValid\" (click)=\"paste()\"></button>\n\n            <button pButton type=\"button\" icon=\"ui-icon-insert-chart\" [disabled]=\"!bandIsSelected\" (click)=\"createNewChart()\" pTooltip=\"Create new chart\"></button>\n\n\n          </div>\n          <div class=\"ui-g-12 pad-left-0\">\n            <div class=\"ui-g-3\">\n              <p-tree [value]=\"profiles\" selectionMode=\"single\" [(selection)]=\"selectedNode\" (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\">\n                <ng-template let-node pTemplate=\"default\">\n                  <div class=\"ui-g inp-div\">\n                    <input-lbl (blur)=\"blur(node)\" class=\"inp-lbl ui-g-4\" [(ngModel)]=\"node.label\" [required]=\"true\" type=\"text\"> </input-lbl>\n                    <div class=\"ui-g-8\" *ngIf=\"selectedNode && node===selectedNode\">\n                      <button pButton class=\"add-btn\" icon=\"ui-icon-close\" type=\"button\" *ngIf=\"node.parent && nodeSelected\" (click)=\"deleteNode()\"></button>\n                      <button pButton class=\"add-btn\" icon=\"ui-icon-add\" type=\"button\" *ngIf=\"nodeSelected && !chartIsSelected\" (click)=\"createNew()\"></button>\n                      <button pButton class=\"add-btn\" icon=\"ui-icon-edit\" type=\"button\" *ngIf=\"chartIsSelected\" (click)=\"editChart()\"></button>\n\n                    </div>\n                  </div>\n                </ng-template>\n              </p-tree>\n            </div>\n          </div>\n          <div class=\"ui-g-12\">\n            <!-- <button pButton type=\"button\" label=\"Refresh\" icon=\"\" (click)=\"refreshDesigner()\"></button> -->\n          </div>\n\n\n          <p-dialog header={{NewChartHeader}} [(visible)]=\"showNewChartModal\" [responsive]=\"true\" [modal]=\"true\" width=\"750\" (onHide)=\"onNewChart_EntityHide()\">\n            <div class=\"ui-g\">\n              <div class=\"ui-g-12\">\n                <div class=\"ui-g-2\">Title:</div>\n                <div class=\"ui-g-10\">\n                  <input id=\"input\" type=\"text\" class=\"ui-g-12\" pInputText [(ngModel)]=\"chartName.title\" />\n                </div>\n              </div>\n              <div class=\"ui-g-12\">\n                <div class=\"ui-g-2\">Type:</div>\n                <div class=\"ui-g-10\">\n                  <p-dropdown class=\"dropdown\" [options]=\"types\" placeholder=\"Select\" [(ngModel)]=\"chartType\"></p-dropdown>\n                </div>\n              </div>\n              <div class=\"ui-g-12\">\n\n                <p-treeTable>\n                  <p-column header=\"Entity name\"></p-column>\n                  <p-column header=\"Type\"></p-column>\n                </p-treeTable>\n                <p-treeTable [value]=\"entities\" [(selection)]=\"selectedEntity\" selectionMode=\"checkbox\" [style]=\"{'max-height':'500px', 'overflow-y':'auto'}\">\n                  <p-column field=\"friendlyName\"></p-column>\n                  <p-column field=\"type\"></p-column>\n                </p-treeTable>\n                <button pButton type=\"button\" *ngIf=\"!addNewEntity\" label=\"Create\" class=\"pull-right marg-top-10\" icon=\"ui-icon-check\" (click)=\"makeChart()\"></button>\n                <button pButton type=\"button\" *ngIf=\"addNewEntity\" label=\"Save\" class=\"pull-right marg-top-10\" icon=\"ui-icon-check\"\n                  (click)=\"saveEdittedChart()\"></button>\n\n              </div>\n            </div>\n          </p-dialog>\n        </div>\n\n        <div class=\"ui-g-9\">\n          <p-tabView *ngIf=\"makeChartInit\" (onChange)=\"loadProfileOnTab($event)\">\n            <p-tabPanel header=\"Chart Designer\">\n              <div class=\"ui-g\">\n                <div class=\"ui-g-12\">\n                  <div class=\"ui-g-9\">\n                    <app-diagram-editor [model]=\"model\" (nodeSelected)=\"showDetails($event)\" (modelChanged)=\"onModelChanged($event)\">\n                    </app-diagram-editor>\n                  </div>\n                  <div class=\"ui-g-3\" *ngIf=\"node\">\n                    Entity:\n                    <p-accordion>\n                      <p-accordionTab [selected]=\"true\">\n                        <p-header class=\"ellipsis\">{{newEntDim.entity}}</p-header>\n                        <div class=\"ui-g\">\n                          <div class=\"ui-g-12\">\n                            Caption:\n                          </div>\n                          <div class=\"ui-g-12\">\n                            <div class=\"ui-g inp-div\">\n                              <input pInputText [(ngModel)]=\"newEntDim.entity\" [required]=\"true\" type=\"text\" />\n                            </div>\n                          </div>\n                          <div class=\"ui-g-12\">\n                            Order by:\n                          </div>\n                          <div class=\"ui-g-6\">\n                            <p-dropdown class=\"ddfill\" [options]=\"fields\" (onChange)=\"setDefaultSortOrder()\" placeholder=\"Select\" [(ngModel)]=\"newEntDim.orderBy\"></p-dropdown>\n                          </div>\n                          <!-- <div class=\"ui-g-12\">\n                            Sort Order:\n                          </div> -->\n                          <div class=\"ui-g-6\">\n                            <p-dropdown class=\"ddfill\" [options]=\"orders\" placeholder=\"Select\" [(ngModel)]=\"newEntDim.sortOrder\"></p-dropdown>\n                            </div>\n                          <div class=\"ui-g-12\">\n                            Record Count:\n                          </div>\n                          <div class=\"ui-g-12\">\n                            <p-spinner class=\"ddfill\" size=\"10\" [(ngModel)]=\"newEntDim.recordCount\" [min]=\"0\" [placeholder]=\"0\" [placeholder]=\"0\"></p-spinner>\n                          </div>\n                        </div>\n                      </p-accordionTab>\n                    </p-accordion>\n                    <div class=\"ui-g-12\">\n                      <button pButton type=\"button\" label=\"Add field\" icon=\"ui-icon-add\" (click)=\"newField()\"></button>\n                      <button pButton type=\"button\" label=\"New link\" icon=\"ui-icon-subdirectory-arrow-right\" (click)=\"newConnection()\"></button>\n\n                    </div>\n                    <div style=\"margin-top:60px\">\n                      Fields:\n                      <p-accordion>\n                        <p-accordionTab *ngFor=\"let acc of newEntDim.dimensions \">\n                          <p-header>\n                            <span class=\"ellipsis\"> {{acc.entity}} </span>\n                            <span (click)=\"deleteField(acc)\" class=\"remove-button\">Ã—</span>\n                          </p-header>\n                          <div class=\"ui-g\" *ngIf=\"acc.nodeType==='Branch' || acc.nodeType==='DataLeaf'\">\n                            <div class=\"ui-g-12\">\n                              Caption:\n                            </div>\n                            <div class=\"ui-g-12\">\n                              <div class=\"ui-g inp-div\">\n                                <input pInputText [(ngModel)]=\"acc.entity\" [required]=\"true\" type=\"text\" />\n                              </div>\n                            </div>\n\n                            <div class=\"ui-g-12\">\n                              <p-checkbox [(ngModel)]=\"acc.isMultiValue\" binary=\"true\" label=\"Multi value:\"></p-checkbox>\n                            </div>\n                            <div class=\"ui-g-12\">\n                              <p-checkbox [(ngModel)]=\"acc.isUnique\" binary=\"true\" label=\"Is Unique:\"></p-checkbox>\n                            </div>\n                            <div class=\"ui-g-12\">\n                              Group:\n                            </div>\n                            <div class=\"ui-g-12\">\n                              <p-spinner class=\"ddfill\" size=\"10\" [(ngModel)]=\"acc.group\" [min]=\"0\" [placeholder]=\"0\"></p-spinner>\n                            </div>\n\n                            <div class=\"ui-g-12\">\n                              <p-checkbox [(ngModel)]=\"acc.isRefDate\" binary=\"true\" label=\"Filter by:\"></p-checkbox>\n                            </div>\n                          </div>\n\n\n                          <div class=\"ui-g\" *ngIf=\"acc.nodeType==='SumLeaf' || acc.nodeType==='AvgLeaf' || acc.nodeType==='CountLeaf'\">\n                            <div class=\"ui-g-12\">\n                              Caption:\n                            </div>\n                            <div class=\"ui-g-12\">\n                              <div class=\"ui-g inp-div\">\n                                <input pInputText [(ngModel)]=\"acc.entity\" [required]=\"true\" type=\"text\" />\n                              </div>\n                            </div>\n\n                            <div class=\"ui-g-12\">\n                              Expression:\n                            </div>\n                            <div class=\"ui-g-12\" *ngIf=\"acc.operand && acc.dataElement\">\n                              {{acc.nodeType | safeHtml}} ( {{acc.dataElement.parent.name}}.{{acc.dataElement.name}}\n\n                              <span *ngIf=\"acc.operand.name && acc.operand.parent.name\"> {{acc.operation | formatOp}} {{acc.operand.parent.name}}.{{acc.operand.name}} </span> )\n\n                              <button pButton type=\"button\" class=\"pull-right\" icon=\"ui-icon-edit\" (click)=\"editField(acc)\"></button>\n\n                            </div>\n\n                          </div>\n                        </p-accordionTab>\n                      </p-accordion>\n                    </div>\n\n                    <div style=\"margin-top:20px\" *ngIf=\"chartName.links.length > 0\">\n                      Links:\n                      <p-accordion>\n                        <p-accordionTab *ngFor=\"let lnk of chartName.links\">\n                          <p-header>\n                            <span class=\"ellipsis\"> {{lnk.left.name}} => {{lnk.right.name}} </span>\n                            <span (click)=\"deleteLink(lnk)\" class=\"remove-button\">Ã—</span>\n                          </p-header>\n                          <div class=\"ui-g\">\n                            <div class=\"ui-g-12\" *ngIf=\"lnk\">\n                              {{lnk.left.name}} => {{lnk.right.name}} ( {{lnk.type}} )\n                              <button pButton type=\"button\" class=\"pull-right\" icon=\"ui-icon-edit\" (click)=\"editLink(lnk)\"></button>\n                            </div>\n                          </div>\n                        </p-accordionTab>\n                      </p-accordion>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </p-tabPanel>\n            <p-tabPanel header=\"Preview\">\n              <div class=\"ui-g\">\n                <bi-viewer [url]=\"url\"></bi-viewer>\n              </div>\n            </p-tabPanel>\n          </p-tabView>\n        </div>\n      </div>\n    </div>\n    <!--  -->\n\n    <p-dialog header=\"Add Field\" *ngIf=\"addedEntDim.dataElement\" (onHide)='onNewFieldHide()' [(visible)]=\"showNewFieldModal\"\n      [responsive]=\"true\" [modal]=\"true\" width=\"750\" class=\"newConDialog\">\n      <div class=\"ui-g\">\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-2\">\n            <p-dropdown class=\"dropdown\" [options]=\"nTypes\" placeholder=\"Function\" [(ngModel)]=\"addedEntDim.nodeType\"></p-dropdown>\n          </div>\n          <div class=\"ui-g-4\">\n            <p-dropdown class=\"dropdown conddwn\" (onChange)=\"dataElementChange($event)\" [options]=\"allFields\" placeholder={{operand1}}\n              [(ngModel)]=\"operand1\"></p-dropdown>\n          </div>\n          <div class=\"ui-g-2\" *ngIf=\"operatorVisible  || editFieldSelect\">\n            <p-dropdown class=\"dropdown\" [options]=\"operators\" (onChange)=\"operatorChange()\" [(ngModel)]=\"addedEntDim.operation\"></p-dropdown>\n          </div>\n          <div class=\"ui-g-4\" *ngIf=\"newOperandVisible || editFieldSelect\">\n            <p-dropdown class=\"dropdown conddwn\" (onChange)=\"operandChange($event)\" [options]=\"allFields\" placeholder={{operand2}} [(ngModel)]=\"operand2\"></p-dropdown>\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <span *ngIf=\"addedEntDim.dataElement.parent\">\n            {{addedEntDim.nodeType | safeHtml}} ( {{addedEntDim.dataElement.parent.name}}.{{addedEntDim.dataElement.name}}\n            <span *ngIf=\"addedEntDim.operand.parent && addedEntDim.operand\">\n              {{addedEntDim.operation | formatOp}} {{addedEntDim.operand.parent.name}}.{{addedEntDim.operand.name}}\n            </span>\n            )\n          </span>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-2\">Caption:</div>\n          <div class=\"ui-g-10\">\n            <input id=\"input\" type=\"text\" class=\"ui-g-12\" pInputText [(ngModel)]=\"addedEntDim.entity\" />\n          </div>\n        </div>\n\n        <div class=\"ui-g-12\">\n          <button pButton type=\"button\" *ngIf=\"editFieldSelect\" label=\"Save\" class=\"pull-right\" icon=\"ui-icon-check\" (click)=\"saveField()\"></button>\n          <button pButton type=\"button\" *ngIf=\"!editFieldSelect\" label=\"Create\" class=\"pull-right\" icon=\"ui-icon-check\" (click)=\"createNewField()\"></button>\n        </div>\n      </div>\n    </p-dialog>\n\n    <p-dialog class=\"newConDialog\" header=\"New Connection\" (onHide)='onNewConnectionHide()' [(visible)]=\"showNewConnectionModal\"\n      [responsive]=\"true\" [modal]=\"true\" width=\"750\">\n      <div class=\"ui-g\">\n        <div class=\"ui-g-12\" *ngIf=\"showNewConnectionModal\">\n          <div class=\"ui-g-4\">\n\n            <p-panel header=\"{{leftEntity.name}}\">\n              <div *ngIf=\"listOfLeftChoices.length > 0\">\n                <p-dropdown class=\"dropdown conddwn\" [(ngModel)]=\"listOfLeftChoices[i]\" *ngFor=\"let choice of listOfLeftChoices ;let i = index\"\n                  [options]=\"leftEntityFields\" placeholder=\"Select\" (onChange)=\"leftEntityChange($event)\"></p-dropdown>\n              </div>\n            </p-panel>\n\n          </div>\n\n          <div class=\"ui-g-4\">\n            <button pButton type=\"button\" icon=\"ui-icon-compare-arrows\" (click)=\"swapLeftAndRightEntities()\"></button>\n            <p-dropdown class=\"dropdown\" [options]=\"connectorTypes\" [(ngModel)]=\"conType\" placeholder=\"PreserveLeft\"></p-dropdown>\n          </div>\n\n          <div class=\"ui-g-4\">\n            <p-panel header=\"{{rightEntity.name}}\">\n              <div *ngIf=\"listOfRightChoices.length > 0\">\n                <p-dropdown class=\"dropdown conddwn\" [(ngModel)]=\"listOfRightChoices[i]\" *ngFor=\"let choice of listOfRightChoices ;let i = index\"\n                  [options]=\"rightEntityFields\" placeholder=\"Select\" (onChange)=\"rightEntityChange($event)\"></p-dropdown>\n              </div>\n            </p-panel>\n\n          </div>\n        </div>\n\n        <div class=\"ui-g-12\">\n          <button pButton type=\"button\" *ngIf=\"edittableLink\" label=\"Save\" class=\"pull-right\" icon=\"ui-icon-check\" (click)=\"saveEdittedLink()\"></button>\n          <button pButton type=\"button\" *ngIf=\"!edittableLink\" label=\"Create\" class=\"pull-right\" icon=\"ui-icon-check\" (click)=\"createNewConnection()\"></button>\n        </div>\n      </div>\n    </p-dialog>\n  ","styles":["\n    @media print{.no-print,.no-print *{display:none !important}}.label-card{max-height:165px;margin-bottom:auto !important}.ellipsis{text-overflow:ellipsis;overflow:hidden;max-width:87%;white-space:nowrap;display:inline-block}.float-right{float:right}.no-margin{margin:auto}.main-value{font-size:36px;font-weight:bold;text-align:center}.caption{font-weight:bold}.table-view-col{width:20px;text-align:center}.ui-datatable-header h4{margin:auto}.ui-datatable .ui-datatable-footer{padding:4px !important}.pad4{padding:4px}.pad-inherit{padding:inherit}.pad05{padding:0px 5px 5px 5px}.marg-top-10{margin-top:10px}@media screen and (max-width: 641px){.c-input span input{width:100% !important}.c-input span{width:100% !important}}.ui-fieldset{padding:2px !important}h2{font-weight:500 !important}.card{margin-bottom:0px !important}.chart-card{padding:0px 5px}.add-btn{width:20px !important;height:20px !important;padding:11px !important;line-height:0em !important;float:right}.inp-lbl{padding:4px}.inp-div .ui-g-8{padding:.2em !important}.ui-tree{width:314px;min-height:40px}.entity-tree .ui-tree{width:44em;max-height:21%;overflow-y:auto}.pull-right{float:right}.ui-dialog{max-height:99% !important}div .dropdown{min-width:20px !important}.ui-dropdown{min-width:75px !important}.add-btn .fa{font-size:15px}.ui-treenode-label{min-width:74%}.pad-left-0{padding-left:0pc}.ui-accordion-header{margin:3px 0px}.remove-button{font-size:21px;background-color:white;color:#555555;display:block;text-align:center;border-radius:13px;width:28px;cursor:pointer;float:right}.remove-button:hover{background-color:#374b69;color:white}.ui-treetable thead th,body .ui-treetable thead tr th{padding:0px}.dropdown div{width:auto !important}.ddfill div{width:100% !important}body .ddfill .ui-dropdown .ui-dropdown-trigger .fa{margin-left:90% !important}.newConDialog .ui-dialog .ui-dialog-content{overflow:inherit !important}.newConDialog .ui-dialog{top:70px !important}.conddwn div{display:block;margin-bottom:15px}body .ui-treetable thead tr{border:1px solid #bdbdbd}\n  "]}]}],"members":{"ngOnDestroy":[{"__symbolic":"method"}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["url"]}]}],"textField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["text"]}]}],"showDetails":[{"__symbolic":"method"}],"onModelChanged":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../services/bi-chart-viewer","name":"BIService"}]}],"ngOnInit":[{"__symbolic":"method"}],"loadProfileOnTab":[{"__symbolic":"method"}],"getProfileStructureInit":[{"__symbolic":"method"}],"nodeSelect":[{"__symbolic":"method"}],"nodeUnselect":[{"__symbolic":"method"}],"blur":[{"__symbolic":"method"}],"copy":[{"__symbolic":"method"}],"cut":[{"__symbolic":"method"}],"paste":[{"__symbolic":"method"}],"createNewChart":[{"__symbolic":"method"}],"editChart":[{"__symbolic":"method"}],"createProfile":[{"__symbolic":"method"}],"createNewBand":[{"__symbolic":"method"}],"addChartToBand":[{"__symbolic":"method"}],"createNew":[{"__symbolic":"method"}],"saveProfile":[{"__symbolic":"method"}],"deleteNode":[{"__symbolic":"method"}],"deleteProfile":[{"__symbolic":"method"}],"deleteBand":[{"__symbolic":"method"}],"deleteChart":[{"__symbolic":"method"}],"makeChart":[{"__symbolic":"method"}],"onNewChart_EntityHide":[{"__symbolic":"method"}],"saveEdittedChart":[{"__symbolic":"method"}],"viewChartDesigner":[{"__symbolic":"method"}],"loadLinkTypes":[{"__symbolic":"method"}],"editField":[{"__symbolic":"method"}],"deleteField":[{"__symbolic":"method"}],"deleteLink":[{"__symbolic":"method"}],"editLink":[{"__symbolic":"method"}],"saveEdittedLink":[{"__symbolic":"method"}],"saveField":[{"__symbolic":"method"}],"newField":[{"__symbolic":"method"}],"createNewField":[{"__symbolic":"method"}],"operatorChange":[{"__symbolic":"method"}],"onNewFieldHide":[{"__symbolic":"method"}],"dataElementChange":[{"__symbolic":"method"}],"operandChange":[{"__symbolic":"method"}],"newConnection":[{"__symbolic":"method"}],"onNewConnectionHide":[{"__symbolic":"method"}],"leftEntityChange":[{"__symbolic":"method"}],"rightEntityChange":[{"__symbolic":"method"}],"createNewConnection":[{"__symbolic":"method"}],"swapLeftAndRightEntities":[{"__symbolic":"method"}],"setDefaultSortOrder":[{"__symbolic":"method"}]}},"Safe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe"},"arguments":[{"name":"safeHtml"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer"}]}],"transform":[{"__symbolic":"method"}]}},"Format":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe"},"arguments":[{"name":"formatOp"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer"}]}],"transform":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"ProfileDesignerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"profile-designer","template":"\n    <div class=\"ui-g\">\n      <div class=\"card ui-g-12\" style=\"margin:7px 10px\">\n        <div class=\"ui-g-3\">\n          <div class=\"ui-g-12\">\n            <button pButton type=\"button\" icon=\"ui-icon-person-add\" [disabled]=\"initNewProfile\" (click)=\"createProfile()\"></button>\n            <button pButton type=\"button\" icon=\"ui-icon-close\" [disabled]=\"!profileIsSelected\" (click)=\"deleteProfile()\" pTooltip=\"Delete profile\"></button>\n            <button pButton type=\"button\" icon=\"ui-icon-check\" [disabled]=\"!profileIsSelected\" (click)=\"saveProfile()\" pTooltip=\"Save profile\"></button>\n\n            <button pButton type=\"button\" icon=\"ui-icon-content-cut\" [disabled]=\"profileIsSelected\" pTooltip=\"Cut\" (click)=\"cut()\"></button>\n            <button pButton type=\"button\" icon=\"ui-icon-content-copy\" [disabled]=\"profileIsSelected\" pTooltip=\"Copy\" (click)=\"copy()\"></button>\n            <button pButton type=\"button\" icon=\"ui-icon-content-paste\" [disabled]=\"!copyValid\" (click)=\"paste()\"></button>\n\n            <button pButton type=\"button\" icon=\"ui-icon-insert-chart\" [disabled]=\"!bandIsSelected\" (click)=\"createNewChart()\" pTooltip=\"Create new chart\"></button>\n\n\n          </div>\n          <div class=\"ui-g-12 pad-left-0\">\n            <div class=\"ui-g-3\">\n              <p-tree [value]=\"profiles\" selectionMode=\"single\" [(selection)]=\"selectedNode\" (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\">\n                <ng-template let-node pTemplate=\"default\">\n                  <div class=\"ui-g inp-div\">\n                    <input-lbl (blur)=\"blur(node)\" class=\"inp-lbl ui-g-4\" [(ngModel)]=\"node.label\" [required]=\"true\" type=\"text\"> </input-lbl>\n                    <div class=\"ui-g-8\" *ngIf=\"selectedNode && node===selectedNode\">\n                      <button pButton class=\"add-btn\" icon=\"ui-icon-close\" type=\"button\" *ngIf=\"node.parent && nodeSelected\" (click)=\"deleteNode()\"></button>\n                      <button pButton class=\"add-btn\" icon=\"ui-icon-add\" type=\"button\" *ngIf=\"nodeSelected && !chartIsSelected\" (click)=\"createNew()\"></button>\n                      <button pButton class=\"add-btn\" icon=\"ui-icon-edit\" type=\"button\" *ngIf=\"chartIsSelected\" (click)=\"editChart()\"></button>\n\n                    </div>\n                  </div>\n                </ng-template>\n              </p-tree>\n            </div>\n          </div>\n          <div class=\"ui-g-12\">\n            <!-- <button pButton type=\"button\" label=\"Refresh\" icon=\"\" (click)=\"refreshDesigner()\"></button> -->\n          </div>\n\n\n          <p-dialog header={{NewChartHeader}} [(visible)]=\"showNewChartModal\" [responsive]=\"true\" [modal]=\"true\" width=\"750\" (onHide)=\"onNewChart_EntityHide()\">\n            <div class=\"ui-g\">\n              <div class=\"ui-g-12\">\n                <div class=\"ui-g-2\">Title:</div>\n                <div class=\"ui-g-10\">\n                  <input id=\"input\" type=\"text\" class=\"ui-g-12\" pInputText [(ngModel)]=\"chartName.title\" />\n                </div>\n              </div>\n              <div class=\"ui-g-12\">\n                <div class=\"ui-g-2\">Type:</div>\n                <div class=\"ui-g-10\">\n                  <p-dropdown class=\"dropdown\" [options]=\"types\" placeholder=\"Select\" [(ngModel)]=\"chartType\"></p-dropdown>\n                </div>\n              </div>\n              <div class=\"ui-g-12\">\n\n                <p-treeTable>\n                  <p-column header=\"Entity name\"></p-column>\n                  <p-column header=\"Type\"></p-column>\n                </p-treeTable>\n                <p-treeTable [value]=\"entities\" [(selection)]=\"selectedEntity\" selectionMode=\"checkbox\" [style]=\"{'max-height':'500px', 'overflow-y':'auto'}\">\n                  <p-column field=\"friendlyName\"></p-column>\n                  <p-column field=\"type\"></p-column>\n                </p-treeTable>\n                <button pButton type=\"button\" *ngIf=\"!addNewEntity\" label=\"Create\" class=\"pull-right marg-top-10\" icon=\"ui-icon-check\" (click)=\"makeChart()\"></button>\n                <button pButton type=\"button\" *ngIf=\"addNewEntity\" label=\"Save\" class=\"pull-right marg-top-10\" icon=\"ui-icon-check\"\n                  (click)=\"saveEdittedChart()\"></button>\n\n              </div>\n            </div>\n          </p-dialog>\n        </div>\n\n        <div class=\"ui-g-9\">\n          <p-tabView *ngIf=\"makeChartInit\" (onChange)=\"loadProfileOnTab($event)\">\n            <p-tabPanel header=\"Chart Designer\">\n              <div class=\"ui-g\">\n                <div class=\"ui-g-12\">\n                  <div class=\"ui-g-9\">\n                    <app-diagram-editor [model]=\"model\" (nodeSelected)=\"showDetails($event)\" (modelChanged)=\"onModelChanged($event)\">\n                    </app-diagram-editor>\n                  </div>\n                  <div class=\"ui-g-3\" *ngIf=\"node\">\n                    Entity:\n                    <p-accordion>\n                      <p-accordionTab [selected]=\"true\">\n                        <p-header class=\"ellipsis\">{{newEntDim.entity}}</p-header>\n                        <div class=\"ui-g\">\n                          <div class=\"ui-g-12\">\n                            Caption:\n                          </div>\n                          <div class=\"ui-g-12\">\n                            <div class=\"ui-g inp-div\">\n                              <input pInputText [(ngModel)]=\"newEntDim.entity\" [required]=\"true\" type=\"text\" />\n                            </div>\n                          </div>\n                          <div class=\"ui-g-12\">\n                            Order by:\n                          </div>\n                          <div class=\"ui-g-6\">\n                            <p-dropdown class=\"ddfill\" [options]=\"fields\" (onChange)=\"setDefaultSortOrder()\" placeholder=\"Select\" [(ngModel)]=\"newEntDim.orderBy\"></p-dropdown>\n                          </div>\n                          <!-- <div class=\"ui-g-12\">\n                            Sort Order:\n                          </div> -->\n                          <div class=\"ui-g-6\">\n                            <p-dropdown class=\"ddfill\" [options]=\"orders\" placeholder=\"Select\" [(ngModel)]=\"newEntDim.sortOrder\"></p-dropdown>\n                            </div>\n                          <div class=\"ui-g-12\">\n                            Record Count:\n                          </div>\n                          <div class=\"ui-g-12\">\n                            <p-spinner class=\"ddfill\" size=\"10\" [(ngModel)]=\"newEntDim.recordCount\" [min]=\"0\" [placeholder]=\"0\" [placeholder]=\"0\"></p-spinner>\n                          </div>\n                        </div>\n                      </p-accordionTab>\n                    </p-accordion>\n                    <div class=\"ui-g-12\">\n                      <button pButton type=\"button\" label=\"Add field\" icon=\"ui-icon-add\" (click)=\"newField()\"></button>\n                      <button pButton type=\"button\" label=\"New link\" icon=\"ui-icon-subdirectory-arrow-right\" (click)=\"newConnection()\"></button>\n\n                    </div>\n                    <div style=\"margin-top:60px\">\n                      Fields:\n                      <p-accordion>\n                        <p-accordionTab *ngFor=\"let acc of newEntDim.dimensions \">\n                          <p-header>\n                            <span class=\"ellipsis\"> {{acc.entity}} </span>\n                            <span (click)=\"deleteField(acc)\" class=\"remove-button\">Ã—</span>\n                          </p-header>\n                          <div class=\"ui-g\" *ngIf=\"acc.nodeType==='Branch' || acc.nodeType==='DataLeaf'\">\n                            <div class=\"ui-g-12\">\n                              Caption:\n                            </div>\n                            <div class=\"ui-g-12\">\n                              <div class=\"ui-g inp-div\">\n                                <input pInputText [(ngModel)]=\"acc.entity\" [required]=\"true\" type=\"text\" />\n                              </div>\n                            </div>\n\n                            <div class=\"ui-g-12\">\n                              <p-checkbox [(ngModel)]=\"acc.isMultiValue\" binary=\"true\" label=\"Multi value:\"></p-checkbox>\n                            </div>\n                            <div class=\"ui-g-12\">\n                              <p-checkbox [(ngModel)]=\"acc.isUnique\" binary=\"true\" label=\"Is Unique:\"></p-checkbox>\n                            </div>\n                            <div class=\"ui-g-12\">\n                              Group:\n                            </div>\n                            <div class=\"ui-g-12\">\n                              <p-spinner class=\"ddfill\" size=\"10\" [(ngModel)]=\"acc.group\" [min]=\"0\" [placeholder]=\"0\"></p-spinner>\n                            </div>\n\n                            <div class=\"ui-g-12\">\n                              <p-checkbox [(ngModel)]=\"acc.isRefDate\" binary=\"true\" label=\"Filter by:\"></p-checkbox>\n                            </div>\n                          </div>\n\n\n                          <div class=\"ui-g\" *ngIf=\"acc.nodeType==='SumLeaf' || acc.nodeType==='AvgLeaf' || acc.nodeType==='CountLeaf'\">\n                            <div class=\"ui-g-12\">\n                              Caption:\n                            </div>\n                            <div class=\"ui-g-12\">\n                              <div class=\"ui-g inp-div\">\n                                <input pInputText [(ngModel)]=\"acc.entity\" [required]=\"true\" type=\"text\" />\n                              </div>\n                            </div>\n\n                            <div class=\"ui-g-12\">\n                              Expression:\n                            </div>\n                            <div class=\"ui-g-12\" *ngIf=\"acc.operand && acc.dataElement\">\n                              {{acc.nodeType | safeHtml}} ( {{acc.dataElement.parent.name}}.{{acc.dataElement.name}}\n\n                              <span *ngIf=\"acc.operand.name && acc.operand.parent.name\"> {{acc.operation | formatOp}} {{acc.operand.parent.name}}.{{acc.operand.name}} </span> )\n\n                              <button pButton type=\"button\" class=\"pull-right\" icon=\"ui-icon-edit\" (click)=\"editField(acc)\"></button>\n\n                            </div>\n\n                          </div>\n                        </p-accordionTab>\n                      </p-accordion>\n                    </div>\n\n                    <div style=\"margin-top:20px\" *ngIf=\"chartName.links.length > 0\">\n                      Links:\n                      <p-accordion>\n                        <p-accordionTab *ngFor=\"let lnk of chartName.links\">\n                          <p-header>\n                            <span class=\"ellipsis\"> {{lnk.left.name}} => {{lnk.right.name}} </span>\n                            <span (click)=\"deleteLink(lnk)\" class=\"remove-button\">Ã—</span>\n                          </p-header>\n                          <div class=\"ui-g\">\n                            <div class=\"ui-g-12\" *ngIf=\"lnk\">\n                              {{lnk.left.name}} => {{lnk.right.name}} ( {{lnk.type}} )\n                              <button pButton type=\"button\" class=\"pull-right\" icon=\"ui-icon-edit\" (click)=\"editLink(lnk)\"></button>\n                            </div>\n                          </div>\n                        </p-accordionTab>\n                      </p-accordion>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </p-tabPanel>\n            <p-tabPanel header=\"Preview\">\n              <div class=\"ui-g\">\n                <bi-viewer [url]=\"url\"></bi-viewer>\n              </div>\n            </p-tabPanel>\n          </p-tabView>\n        </div>\n      </div>\n    </div>\n    <!--  -->\n\n    <p-dialog header=\"Add Field\" *ngIf=\"addedEntDim.dataElement\" (onHide)='onNewFieldHide()' [(visible)]=\"showNewFieldModal\"\n      [responsive]=\"true\" [modal]=\"true\" width=\"750\" class=\"newConDialog\">\n      <div class=\"ui-g\">\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-2\">\n            <p-dropdown class=\"dropdown\" [options]=\"nTypes\" placeholder=\"Function\" [(ngModel)]=\"addedEntDim.nodeType\"></p-dropdown>\n          </div>\n          <div class=\"ui-g-4\">\n            <p-dropdown class=\"dropdown conddwn\" (onChange)=\"dataElementChange($event)\" [options]=\"allFields\" placeholder={{operand1}}\n              [(ngModel)]=\"operand1\"></p-dropdown>\n          </div>\n          <div class=\"ui-g-2\" *ngIf=\"operatorVisible  || editFieldSelect\">\n            <p-dropdown class=\"dropdown\" [options]=\"operators\" (onChange)=\"operatorChange()\" [(ngModel)]=\"addedEntDim.operation\"></p-dropdown>\n          </div>\n          <div class=\"ui-g-4\" *ngIf=\"newOperandVisible || editFieldSelect\">\n            <p-dropdown class=\"dropdown conddwn\" (onChange)=\"operandChange($event)\" [options]=\"allFields\" placeholder={{operand2}} [(ngModel)]=\"operand2\"></p-dropdown>\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <span *ngIf=\"addedEntDim.dataElement.parent\">\n            {{addedEntDim.nodeType | safeHtml}} ( {{addedEntDim.dataElement.parent.name}}.{{addedEntDim.dataElement.name}}\n            <span *ngIf=\"addedEntDim.operand.parent && addedEntDim.operand\">\n              {{addedEntDim.operation | formatOp}} {{addedEntDim.operand.parent.name}}.{{addedEntDim.operand.name}}\n            </span>\n            )\n          </span>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-2\">Caption:</div>\n          <div class=\"ui-g-10\">\n            <input id=\"input\" type=\"text\" class=\"ui-g-12\" pInputText [(ngModel)]=\"addedEntDim.entity\" />\n          </div>\n        </div>\n\n        <div class=\"ui-g-12\">\n          <button pButton type=\"button\" *ngIf=\"editFieldSelect\" label=\"Save\" class=\"pull-right\" icon=\"ui-icon-check\" (click)=\"saveField()\"></button>\n          <button pButton type=\"button\" *ngIf=\"!editFieldSelect\" label=\"Create\" class=\"pull-right\" icon=\"ui-icon-check\" (click)=\"createNewField()\"></button>\n        </div>\n      </div>\n    </p-dialog>\n\n    <p-dialog class=\"newConDialog\" header=\"New Connection\" (onHide)='onNewConnectionHide()' [(visible)]=\"showNewConnectionModal\"\n      [responsive]=\"true\" [modal]=\"true\" width=\"750\">\n      <div class=\"ui-g\">\n        <div class=\"ui-g-12\" *ngIf=\"showNewConnectionModal\">\n          <div class=\"ui-g-4\">\n\n            <p-panel header=\"{{leftEntity.name}}\">\n              <div *ngIf=\"listOfLeftChoices.length > 0\">\n                <p-dropdown class=\"dropdown conddwn\" [(ngModel)]=\"listOfLeftChoices[i]\" *ngFor=\"let choice of listOfLeftChoices ;let i = index\"\n                  [options]=\"leftEntityFields\" placeholder=\"Select\" (onChange)=\"leftEntityChange($event)\"></p-dropdown>\n              </div>\n            </p-panel>\n\n          </div>\n\n          <div class=\"ui-g-4\">\n            <button pButton type=\"button\" icon=\"ui-icon-compare-arrows\" (click)=\"swapLeftAndRightEntities()\"></button>\n            <p-dropdown class=\"dropdown\" [options]=\"connectorTypes\" [(ngModel)]=\"conType\" placeholder=\"PreserveLeft\"></p-dropdown>\n          </div>\n\n          <div class=\"ui-g-4\">\n            <p-panel header=\"{{rightEntity.name}}\">\n              <div *ngIf=\"listOfRightChoices.length > 0\">\n                <p-dropdown class=\"dropdown conddwn\" [(ngModel)]=\"listOfRightChoices[i]\" *ngFor=\"let choice of listOfRightChoices ;let i = index\"\n                  [options]=\"rightEntityFields\" placeholder=\"Select\" (onChange)=\"rightEntityChange($event)\"></p-dropdown>\n              </div>\n            </p-panel>\n\n          </div>\n        </div>\n\n        <div class=\"ui-g-12\">\n          <button pButton type=\"button\" *ngIf=\"edittableLink\" label=\"Save\" class=\"pull-right\" icon=\"ui-icon-check\" (click)=\"saveEdittedLink()\"></button>\n          <button pButton type=\"button\" *ngIf=\"!edittableLink\" label=\"Create\" class=\"pull-right\" icon=\"ui-icon-check\" (click)=\"createNewConnection()\"></button>\n        </div>\n      </div>\n    </p-dialog>\n  ","styles":["\n    @media print{.no-print,.no-print *{display:none !important}}.label-card{max-height:165px;margin-bottom:auto !important}.ellipsis{text-overflow:ellipsis;overflow:hidden;max-width:87%;white-space:nowrap;display:inline-block}.float-right{float:right}.no-margin{margin:auto}.main-value{font-size:36px;font-weight:bold;text-align:center}.caption{font-weight:bold}.table-view-col{width:20px;text-align:center}.ui-datatable-header h4{margin:auto}.ui-datatable .ui-datatable-footer{padding:4px !important}.pad4{padding:4px}.pad-inherit{padding:inherit}.pad05{padding:0px 5px 5px 5px}.marg-top-10{margin-top:10px}@media screen and (max-width: 641px){.c-input span input{width:100% !important}.c-input span{width:100% !important}}.ui-fieldset{padding:2px !important}h2{font-weight:500 !important}.card{margin-bottom:0px !important}.chart-card{padding:0px 5px}.add-btn{width:20px !important;height:20px !important;padding:11px !important;line-height:0em !important;float:right}.inp-lbl{padding:4px}.inp-div .ui-g-8{padding:.2em !important}.ui-tree{width:314px;min-height:40px}.entity-tree .ui-tree{width:44em;max-height:21%;overflow-y:auto}.pull-right{float:right}.ui-dialog{max-height:99% !important}div .dropdown{min-width:20px !important}.ui-dropdown{min-width:75px !important}.add-btn .fa{font-size:15px}.ui-treenode-label{min-width:74%}.pad-left-0{padding-left:0pc}.ui-accordion-header{margin:3px 0px}.remove-button{font-size:21px;background-color:white;color:#555555;display:block;text-align:center;border-radius:13px;width:28px;cursor:pointer;float:right}.remove-button:hover{background-color:#374b69;color:white}.ui-treetable thead th,body .ui-treetable thead tr th{padding:0px}.dropdown div{width:auto !important}.ddfill div{width:100% !important}body .ddfill .ui-dropdown .ui-dropdown-trigger .fa{margin-left:90% !important}.newConDialog .ui-dialog .ui-dialog-content{overflow:inherit !important}.newConDialog .ui-dialog{top:70px !important}.conddwn div{display:block;margin-bottom:15px}body .ui-treetable thead tr{border:1px solid #bdbdbd}\n  "]}]}],"members":{"ngOnDestroy":[{"__symbolic":"method"}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["url"]}]}],"textField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["text"]}]}],"showDetails":[{"__symbolic":"method"}],"onModelChanged":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../services/bi-chart-viewer","name":"BIService"}]}],"ngOnInit":[{"__symbolic":"method"}],"loadProfileOnTab":[{"__symbolic":"method"}],"getProfileStructureInit":[{"__symbolic":"method"}],"nodeSelect":[{"__symbolic":"method"}],"nodeUnselect":[{"__symbolic":"method"}],"blur":[{"__symbolic":"method"}],"copy":[{"__symbolic":"method"}],"cut":[{"__symbolic":"method"}],"paste":[{"__symbolic":"method"}],"createNewChart":[{"__symbolic":"method"}],"editChart":[{"__symbolic":"method"}],"createProfile":[{"__symbolic":"method"}],"createNewBand":[{"__symbolic":"method"}],"addChartToBand":[{"__symbolic":"method"}],"createNew":[{"__symbolic":"method"}],"saveProfile":[{"__symbolic":"method"}],"deleteNode":[{"__symbolic":"method"}],"deleteProfile":[{"__symbolic":"method"}],"deleteBand":[{"__symbolic":"method"}],"deleteChart":[{"__symbolic":"method"}],"makeChart":[{"__symbolic":"method"}],"onNewChart_EntityHide":[{"__symbolic":"method"}],"saveEdittedChart":[{"__symbolic":"method"}],"viewChartDesigner":[{"__symbolic":"method"}],"loadLinkTypes":[{"__symbolic":"method"}],"editField":[{"__symbolic":"method"}],"deleteField":[{"__symbolic":"method"}],"deleteLink":[{"__symbolic":"method"}],"editLink":[{"__symbolic":"method"}],"saveEdittedLink":[{"__symbolic":"method"}],"saveField":[{"__symbolic":"method"}],"newField":[{"__symbolic":"method"}],"createNewField":[{"__symbolic":"method"}],"operatorChange":[{"__symbolic":"method"}],"onNewFieldHide":[{"__symbolic":"method"}],"dataElementChange":[{"__symbolic":"method"}],"operandChange":[{"__symbolic":"method"}],"newConnection":[{"__symbolic":"method"}],"onNewConnectionHide":[{"__symbolic":"method"}],"leftEntityChange":[{"__symbolic":"method"}],"rightEntityChange":[{"__symbolic":"method"}],"createNewConnection":[{"__symbolic":"method"}],"swapLeftAndRightEntities":[{"__symbolic":"method"}],"setDefaultSortOrder":[{"__symbolic":"method"}]}},"Safe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe"},"arguments":[{"name":"safeHtml"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer"}]}],"transform":[{"__symbolic":"method"}]}},"Format":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe"},"arguments":[{"name":"formatOp"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer"}]}],"transform":[{"__symbolic":"method"}]}}}}]